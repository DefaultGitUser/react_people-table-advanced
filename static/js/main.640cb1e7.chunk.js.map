{"version":3,"sources":["components/Navbar.tsx","App.tsx","pages/HomePage.tsx","types/SexEnum.ts","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/HighlightedText/HighlightedText.tsx","types/FilterEnum.ts","components/PersonLink/PersonLink.tsx","components/TableRow/TableRow.tsx","components/Icon/Icon.tsx","types/SortEnum.ts","components/PeopleTable.tsx","api.ts","utils/helpers.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["Navbar","className","role","to","isActive","classNames","App","HomePage","SexEnum","MyFiltersParam","withDefault","ArrayParam","PeopleFilters","useQueryParams","sex","StringParam","century","query","searchParams","setSearchParams","handleCenturyFilter","cent","e","preventDefault","includes","filter","c","undefined","handleSexChange","newSex","href","onClick","Man","Woman","onChange","value","target","toLowerCase","replace","type","placeholder","map","String","length","Loader","HighlightedText","text","highlight","normalizedText","parts","split","RegExp","part","i","highlighted","FilterEnum","PersonLink","person","name","slug","useSearchParams","searchFilters","q","get","Query","pathname","search","toString","TableRow","born","died","motherName","fatherName","mother","father","useParams","Icon","sortBy","sort","order","isSorting","isDesc","SortEnum","PeopleTable","people","handleSortFilter","Name","Sex","Born","Died","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","isLoading","setIsLoading","isError","setIsError","setPeople","useEffect","getPeople","peopleFromServer","find","mom","dad","getPreparedPeople","catch","finally","visiblePeople","useMemo","result","console","log","centuries","getAll","Number","year","Math","ceil","a","b","localeCompare","reverse","NotFoundPage","Root","adapter","ReactRouter6Adapter","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.640cb1e7.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            to=\"/people\"\n            className={({ isActive }) => classNames(\n              'navbar-item',\n              { 'has-background-grey-lighter': isActive },\n            )}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\n\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export enum SexEnum {\n  Man = 'm',\n  Woman = 'f',\n}\n","import classNames from 'classnames';\nimport {\n  useQueryParams,\n  StringParam,\n  withDefault,\n  ArrayParam,\n} from 'use-query-params';\n\nimport { SexEnum } from '../types/SexEnum';\n\nconst MyFiltersParam = withDefault(ArrayParam, []);\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useQueryParams({\n    sex: StringParam,\n    century: MyFiltersParam,\n    query: StringParam,\n  });\n\n  const { century, sex, query } = searchParams;\n\n  const handleCenturyFilter = (\n    cent: string | null,\n  ) => (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n    e.preventDefault();\n\n    if (!cent) {\n      setSearchParams({\n        century: undefined,\n      });\n\n      return;\n    }\n\n    if (!century.includes(cent as never)) {\n      setSearchParams({\n        century: [...century, cent],\n      });\n\n      return;\n    }\n\n    setSearchParams({\n      century: century.filter(c => c !== cent),\n    });\n  };\n\n  const handleSexChange = (\n    newSex: string | null,\n  ) => (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n    e.preventDefault();\n\n    if (!newSex) {\n      setSearchParams({\n        sex: undefined,\n      });\n\n      return;\n    }\n\n    setSearchParams({\n      sex: newSex,\n    });\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value\n      .toLowerCase()\n      .replace(/[^a-zA-Z\\s\\u0400-\\u04FF]/gu, '');\n\n    setSearchParams({\n      query: value || null,\n    });\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <a\n          className={classNames(\n            { 'is-active': !sex },\n          )}\n          href=\"#/people\"\n          onClick={handleSexChange(null)}\n        >\n          All\n        </a>\n        <a\n          href=\"#/people?sex=m\"\n          onClick={handleSexChange(SexEnum.Man)}\n          className={classNames(\n            { 'is-active': sex === SexEnum.Man },\n          )}\n        >\n          Male\n        </a>\n        <a\n          className={classNames(\n            { 'is-active': sex === SexEnum.Woman },\n          )}\n          href=\"#/people?sex=f\"\n          onClick={handleSexChange(SexEnum.Woman)}\n        >\n          Female\n        </a>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            onChange={handleInputChange}\n            value={query || ''}\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {[16, 17, 18, 19, 20].map(String).map(value => (\n              <a\n                key={value}\n                data-cy=\"century\"\n                className={classNames(\n                  'button mr-1',\n                  { 'is-info': century.includes(value as never) },\n                )}\n                href={`#/people?centuries=${value}`}\n                onClick={handleCenturyFilter(value)}\n              >\n                {value}\n              </a>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <a\n              data-cy=\"centuryALL\"\n              className={classNames(\n                'button is-success',\n                { 'is-outlined': century.length !== 0 },\n              )}\n              href=\"#/people\"\n              onClick={handleCenturyFilter(null)}\n            >\n              All\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <a\n          className=\"button is-link is-outlined is-fullwidth\"\n          href=\"#/people\"\n        >\n          Reset all filters\n        </a>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\n\ntype Props = {\n  text: string | null,\n  highlight: string | null\n};\n\nexport const HighlightedText: React.FC<Props> = ({\n  text = '',\n  highlight = '',\n}) => {\n  if (!text) {\n    return (\n      <span>-</span>\n    );\n  }\n\n  const normalizedText = text?.toLowerCase();\n\n  if (highlight !== null && normalizedText.includes(highlight)) {\n    const parts = text.split(new RegExp(`(${highlight})`, 'gi'));\n\n    return (\n      <span>\n        {parts.map((part, i) => (\n          <span\n            // eslint-disable-next-line react/no-array-index-key\n            key={`${i}`}\n            className={classNames(\n              { highlighted: part.toLowerCase() === highlight.toLowerCase() },\n            )}\n          >\n            {part}\n          </span>\n        ))}\n      </span>\n    );\n  }\n\n  return (\n    <span>{text}</span>\n  );\n};\n","export enum FilterEnum {\n  Query = 'query',\n}\n","import classNames from 'classnames';\n\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { SexEnum } from '../../types/SexEnum';\nimport { HighlightedText } from '../HighlightedText';\nimport { FilterEnum } from '../../types/FilterEnum';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, slug, sex } = person;\n  const [searchFilters] = useSearchParams();\n  const q = searchFilters.get(FilterEnum.Query);\n\n  return (\n    <Link\n      to={{\n        pathname: `../${slug}`,\n        search: searchFilters.toString(),\n      }}\n      className={classNames(\n        { 'has-text-danger': sex === SexEnum.Woman },\n      )}\n    >\n      <HighlightedText text={name} highlight={q} />\n    </Link>\n  );\n};\n","import { useParams, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\nimport { HighlightedText } from '../HighlightedText';\nimport { FilterEnum } from '../../types/FilterEnum';\n\ntype Props = {\n  person: Person;\n};\n\nexport const TableRow: React.FC<Props> = ({ person }) => {\n  const {\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    father,\n  } = person;\n\n  const [searchFilters] = useSearchParams();\n  const q = searchFilters.get(FilterEnum.Query);\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': slug === person.slug },\n      )}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {(mother)\n          ? (<PersonLink person={mother} />)\n          : <HighlightedText text={motherName} highlight={q} />}\n      </td>\n      <td>\n        {(father)\n          ? (<PersonLink person={father} />)\n          : <HighlightedText text={fatherName} highlight={q} />}\n      </td>\n    </tr>\n  );\n};\n","import { StringParam, useQueryParams } from 'use-query-params';\n\ntype Props = {\n  sortBy: string,\n};\n\nexport const Icon: React.FC<Props> = ({ sortBy }) => {\n  const [searchParams] = useQueryParams({\n    sort: StringParam,\n    order: StringParam,\n  });\n\n  const isSorting = searchParams.sort === sortBy;\n  const isDesc = searchParams.order === 'desc';\n\n  switch (true) {\n    case (isSorting && !isDesc):\n      return (<i className=\"fas fa-sort-up\" />);\n    case (isSorting && isDesc):\n      return (<i className=\"fas fa-sort-down\" />);\n    default:\n      break;\n  }\n\n  return (<i className=\"fas fa-sort\" />);\n};\n","export enum SortEnum {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n","import { StringParam, useQueryParams } from 'use-query-params';\nimport { Person } from '../types';\nimport { TableRow } from './TableRow';\nimport { Icon } from './Icon/Icon';\nimport { SortEnum } from '../types/SortEnum';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const [searchParams, setSearchParams] = useQueryParams({\n    sort: StringParam,\n    order: StringParam,\n  });\n\n  const handleSortFilter = (\n    sortBy: string | null,\n  ) => (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n    e.preventDefault();\n\n    if (!sortBy) {\n      setSearchParams({\n        sort: null,\n        order: null,\n      });\n\n      return;\n    }\n\n    if (searchParams.sort !== sortBy) {\n      setSearchParams({\n        sort: sortBy,\n        order: null,\n      });\n\n      return;\n    }\n\n    if (!searchParams.order) {\n      setSearchParams({\n        order: 'desc',\n      });\n\n      return;\n    }\n\n    if (searchParams.order) {\n      setSearchParams({\n        order: null,\n        sort: null,\n      });\n    }\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <a\n                href=\"#/people?sort=name\"\n                onClick={handleSortFilter(SortEnum.Name)}\n              >\n                <span className=\"icon\">\n                  <Icon sortBy={SortEnum.Name} />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <a\n                href=\"#/people?sort=sex\"\n                onClick={handleSortFilter(SortEnum.Sex)}\n              >\n                <span className=\"icon\">\n                  <Icon sortBy={SortEnum.Sex} />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <a\n                href=\"#/people?sort=born&amp;order=desc\"\n                onClick={handleSortFilter(SortEnum.Born)}\n              >\n                <span className=\"icon\">\n                  <Icon sortBy={SortEnum.Born} />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <a\n                href=\"#/people?sort=died\"\n                onClick={handleSortFilter(SortEnum.Died)}\n              >\n                <span className=\"icon\">\n                  <Icon sortBy={SortEnum.Died} />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <TableRow person={person} key={person.slug} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export const getCentury = (year: number) => {\n  return Math.ceil(year / 100);\n};\n","import {\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { PeopleFilters } from '../components/PeopleFilters';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { getCentury } from '../utils/helpers';\nimport { SortEnum } from '../types/SortEnum';\n\nconst getPreparedPeople = (people: Person[]) => {\n  return people.map(person => {\n    const mother = people.find(mom => mom.name === person.motherName);\n    const father = people.find(dad => dad.name === person.fatherName);\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n};\n\nconst filterByQuery = (query: string) => (person: Person) => {\n  if (!query) {\n    return false;\n  }\n\n  return (`${person.name} ${person.motherName} ${person.fatherName}`)\n    .toLowerCase().includes(query);\n};\n\nexport const PeoplePage = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [people, setPeople] = useState<Person[]>([]);\n  const [searchFilters] = useSearchParams();\n\n  useEffect(() => {\n    getPeople()\n      .then((peopleFromServer) => {\n        setPeople(getPreparedPeople(peopleFromServer));\n      })\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const visiblePeople = useMemo(() => {\n    let result = [...people];\n\n    if (searchFilters.get('sex')) {\n      result = result.filter(person => person.sex === searchFilters.get('sex'));\n    }\n\n    if (searchFilters.get('query')) {\n      // eslint-disable-next-line no-console\n      console.log(searchFilters.get('query'));\n      result = result.filter(\n        filterByQuery(searchFilters.get('query') as string),\n      );\n    }\n\n    if (searchFilters.get('century')) {\n      const centuries = searchFilters.getAll('century').map(Number);\n\n      result = result.filter(person => {\n        return centuries.includes(getCentury(person.born));\n      });\n    }\n\n    if (searchFilters.get('sort')) {\n      const sortField = searchFilters.get('sort') as string;\n\n      switch (sortField) {\n        case SortEnum.Name:\n          result = result.sort((a, b) => {\n            return a.name.localeCompare(b.name);\n          });\n          break;\n\n        case SortEnum.Sex:\n          result = result.sort((a, b) => {\n            return a.sex.localeCompare(b.sex);\n          });\n          break;\n\n        case SortEnum.Born:\n          result = result.sort((a, b) => {\n            return a.born - b.born;\n          });\n          break;\n        case SortEnum.Died:\n          result = result.sort((a, b) => {\n            return a.died - b.died;\n          });\n          break;\n        default:\n          break;\n      }\n    }\n\n    if (searchFilters.get('order') === 'desc') {\n      result.reverse();\n    }\n\n    return result;\n  }, [searchFilters, people]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n\n          {people.length > 0 && (\n            <div className=\"column is-7-tablet is-narrow-desktop\">\n              <PeopleFilters />\n            </div>\n          )}\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && (\n                <Loader />\n              )}\n\n              {isError && (\n                <p data-cy=\"peopleLoadingError\">Something went wrong</p>\n              )}\n\n              {(people.length === 0 && !isLoading) && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              ) }\n\n              {(!isLoading && visiblePeople.length === 0) && (\n                <p>There are no people matching the current search criteria</p>\n              )}\n\n              {(!isLoading && visiblePeople.length > 0) && (\n                <PeopleTable people={visiblePeople} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { QueryParamProvider } from 'use-query-params';\nimport { ReactRouter6Adapter } from 'use-query-params/adapters/react-router-6';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root = () => {\n  return (\n    <Router>\n      <QueryParamProvider adapter={ReactRouter6Adapter}>\n        <Routes>\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/\" element={<App />}>\n            <Route index element={<HomePage />} />\n            <Route path=\"people\">\n              <Route path=\":slug?\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Route>\n        </Routes>\n      </QueryParamProvider>\n    </Router>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}